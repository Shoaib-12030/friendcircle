rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Users collection - users can read/write their own data
    // Document ID is mobile number, but we check firebaseUid field
    match /users/{userId} {
      // Allow read for any authenticated user (for social features)
      allow read: if request.auth != null;
      
      // Allow create if user is authenticated (for registration)
      allow create: if request.auth != null && 
        request.auth.uid == request.resource.data.firebaseUid;
      
      // Allow write/update if user is authenticated and owns the document
      allow write: if request.auth != null && 
        request.auth.uid == resource.data.firebaseUid;
      
      // Allow update if user is authenticated and owns the document
      allow update: if request.auth != null && 
        request.auth.uid == resource.data.firebaseUid;
      
      // Allow delete if user is authenticated and owns the document
      allow delete: if request.auth != null && 
        request.auth.uid == resource.data.firebaseUid;
    }
    
    // Groups collection - group members can read/write
    match /groups/{groupId} {
      allow read, write: if request.auth != null && 
        request.auth.uid in resource.data.memberIds;
      allow create: if request.auth != null;
    }
    
    // Messages collection - group members can read/write
    match /messages/{messageId} {
      allow read, write: if request.auth != null && 
        exists(/databases/$(database)/documents/groups/$(resource.data.groupId)) &&
        request.auth.uid in get(/databases/$(database)/documents/groups/$(resource.data.groupId)).data.memberIds;
    }
    
    // Events collection - group members can read/write
    match /events/{eventId} {
      allow read, write: if request.auth != null && 
        exists(/databases/$(database)/documents/groups/$(resource.data.groupId)) &&
        request.auth.uid in get(/databases/$(database)/documents/groups/$(resource.data.groupId)).data.memberIds;
    }
    
    // Expenses collection - group members can read/write
    match /expenses/{expenseId} {
      allow read, write: if request.auth != null && 
        exists(/databases/$(database)/documents/groups/$(resource.data.groupId)) &&
        request.auth.uid in get(/databases/$(database)/documents/groups/$(resource.data.groupId)).data.memberIds;
    }
    
    // Friend requests collection
    match /friend_requests/{requestId} {
      allow read, write: if request.auth != null && 
        (request.auth.uid == resource.data.fromUserId || 
         request.auth.uid == resource.data.toUserId);
      allow create: if request.auth != null;
    }
  }
}